<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>57.0</apiVersion>
    <assignments>
        <name>Assign_Project_Task_Order</name>
        <label>Assign Project Task Order</label>
        <locationX>204</locationX>
        <locationY>1355</locationY>
        <assignmentItems>
            <assignToReference>projecttask.Order__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>newOrder</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>projectTaskForUpdate</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>projecttask.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Is_Story</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Project_Task_Record</name>
        <label>Assign Project Task Record</label>
        <locationX>204</locationX>
        <locationY>1055</locationY>
        <assignmentItems>
            <assignToReference>projecttask.Project__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Workplan_Record.Project__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>projecttask.Epic__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Workplan_Record.Epic__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>projecttask.Campaign__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_Workplan_Record.Campaign__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>projecttask.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>projectTaskForUpdate</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Not_Feature_Functionality</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Project_Task_Story</name>
        <label>Assign Project Task Story</label>
        <locationX>50</locationX>
        <locationY>2087</locationY>
        <assignmentItems>
            <assignToReference>projecttask.Name_of_the_Approver__c</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Get_User.Name</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>projectTaskForUpdate</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>projecttask.Id</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Project_Task_for_Update</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Assign_Total_Proposed_Hours</name>
        <label>Assign Total Proposed Hours</label>
        <locationX>589</locationX>
        <locationY>647</locationY>
        <assignmentItems>
            <assignToReference>TotalProposedHours</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>Loop_Project_Tasks.Proposed_Hours__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>OrderMax</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Loop_Project_Tasks.Order__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>workPlanForUpdate</assignToReference>
            <operator>Assign</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Loop_Project_Tasks</targetReference>
        </connector>
    </assignments>
    <decisions>
        <name>Check_if_Public_Group_Exists</name>
        <label>Check if Public Group Exists</label>
        <locationX>182</locationX>
        <locationY>1763</locationY>
        <defaultConnector>
            <targetReference>Project_Task_for_Update</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Public_Group_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Public_Group</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Public_Group_Member</targetReference>
            </connector>
            <label>Public Group Exists</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Created</name>
        <label>Is Created?</label>
        <locationX>501</locationX>
        <locationY>839</locationY>
        <defaultConnector>
            <targetReference>Workplan_for_Update</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>created</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>ISNEW</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Workplan_Record_Exists</targetReference>
            </connector>
            <label>created?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Is_Story</name>
        <label>Is Story?</label>
        <locationX>336</locationX>
        <locationY>1547</locationY>
        <defaultConnector>
            <targetReference>Project_Task_for_Update</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Story</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Story</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_Public_Group</targetReference>
            </connector>
            <label>Story</label>
        </rules>
    </decisions>
    <decisions>
        <name>Not_Feature_Functionality</name>
        <label>Not Feature/Functionality</label>
        <locationX>336</locationX>
        <locationY>1247</locationY>
        <defaultConnector>
            <targetReference>Is_Story</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Not_Feature_Funct</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Feature</stringValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.RecordType.DeveloperName</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>Functionality</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Project_Task_Order</targetReference>
            </connector>
            <label>Not Feature/Funct</label>
        </rules>
    </decisions>
    <decisions>
        <name>Project_Task_for_Update</name>
        <label>Project Task for Update</label>
        <locationX>336</locationX>
        <locationY>2363</locationY>
        <defaultConnector>
            <targetReference>Workplan_for_Update</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>PT_For_Update</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>projectTaskForUpdate</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Project_Task</targetReference>
            </connector>
            <label>PT For Update?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Workplan_for_Update</name>
        <label>Workplan for Update</label>
        <locationX>501</locationX>
        <locationY>2747</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>WP_for_Update</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>workPlanForUpdate</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <booleanValue>true</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Update_Workplan</targetReference>
            </connector>
            <label>WP for Update?</label>
        </rules>
    </decisions>
    <decisions>
        <name>Workplan_Record_Exists</name>
        <label>Workplan Record Exists</label>
        <locationX>336</locationX>
        <locationY>947</locationY>
        <defaultConnector>
            <targetReference>Not_Feature_Functionality</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Workplan_Exists</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Workplan_Record</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Assign_Project_Task_Record</targetReference>
            </connector>
            <label>Workplan Exists</label>
        </rules>
    </decisions>
    <description>CAPM-AGL-555-DV</description>
    <environments>Default</environments>
    <formulas>
        <name>ISNEW</name>
        <dataType>Boolean</dataType>
        <expression>ISNEW()</expression>
    </formulas>
    <formulas>
        <name>newOrder</name>
        <dataType>Number</dataType>
        <expression>{!OrderMax} + 1</expression>
        <scale>0</scale>
    </formulas>
    <interviewLabel>Project Task - After Insert or Update {!$Flow.CurrentDateTime}</interviewLabel>
    <label>Project Task - After Insert or Update</label>
    <loops>
        <name>Loop_Project_Tasks</name>
        <label>Loop Project Tasks</label>
        <locationX>501</locationX>
        <locationY>539</locationY>
        <collectionReference>Get_all_Project_Tasks_of_Workplan</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Assign_Total_Proposed_Hours</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Is_Created</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordLookups>
        <name>Get_all_Project_Tasks_of_Workplan</name>
        <label>Get all Project Tasks of Workplan</label>
        <locationX>501</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Loop_Project_Tasks</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Workplan__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Workplan_Record.Id</elementReference>
            </value>
        </filters>
        <filters>
            <field>Workplan__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <stringValue></stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Project_Task__c</object>
        <sortField>Order__c</sortField>
        <sortOrder>Asc</sortOrder>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Public_Group</name>
        <label>Get Public Group</label>
        <locationX>182</locationX>
        <locationY>1655</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Check_if_Public_Group_Exists</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>DeveloperName</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Project_Task_Approver</stringValue>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Group</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Public_Group_Member</name>
        <label>Get Public Group Member</label>
        <locationX>50</locationX>
        <locationY>1871</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_User</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>GroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Public_Group.Id</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>GroupMember</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_User</name>
        <label>Get User</label>
        <locationX>50</locationX>
        <locationY>1979</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Assign_Project_Task_Story</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Public_Group_Member.UserOrGroupId</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Workplan_Record</name>
        <label>Get Workplan Record</label>
        <locationX>501</locationX>
        <locationY>323</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Get_all_Project_Tasks_of_Workplan</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Workplan__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Workplan__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Update_Project_Task</name>
        <label>Update Project Task</label>
        <locationX>204</locationX>
        <locationY>2471</locationY>
        <connector>
            <targetReference>Workplan_for_Update</targetReference>
        </connector>
        <inputReference>projecttask</inputReference>
    </recordUpdates>
    <recordUpdates>
        <name>Update_Workplan</name>
        <label>Update Workplan</label>
        <locationX>369</locationX>
        <locationY>2855</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Workplan_Record.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>Total_Proposed_Hours__c</field>
            <value>
                <elementReference>TotalProposedHours</elementReference>
            </value>
        </inputAssignments>
        <object>Workplan__c</object>
    </recordUpdates>
    <start>
        <locationX>375</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Workplan_Record</targetReference>
        </connector>
        <object>Project_Task__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Obsolete</status>
    <variables>
        <name>OrderMax</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>0</scale>
    </variables>
    <variables>
        <name>projecttask</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>Project_Task__c</objectType>
    </variables>
    <variables>
        <name>projectTaskForUpdate</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
    <variables>
        <name>TotalProposedHours</name>
        <dataType>Number</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <scale>2</scale>
    </variables>
    <variables>
        <name>workPlanForUpdate</name>
        <dataType>Boolean</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <value>
            <booleanValue>false</booleanValue>
        </value>
    </variables>
</Flow>
